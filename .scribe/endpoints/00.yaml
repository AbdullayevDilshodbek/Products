name: 'Product Actions'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/products
    metadata:
      groupName: 'Product Actions'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all products with paginate'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      search:
        name: search
        description: ''
        required: false
        example: ut
        type: string
        custom: []
    cleanQueryParameters:
      search: ut
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/product/create
    metadata:
      groupName: 'Product Actions'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create new product'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: ''
        required: true
        example: sunt
        type: string
        custom: []
      price:
        name: price
        description: ''
        required: true
        example: veniam
        type: string
        custom: []
      amount:
        name: amount
        description: ''
        required: true
        example: adipisci
        type: string
        custom: []
    cleanBodyParameters:
      title: sunt
      price: veniam
      amount: adipisci
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/product/update/{id}'
    metadata:
      groupName: 'Product Actions'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update product data'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the update.'
        required: true
        example: fugiat
        type: string
        custom: []
    cleanUrlParameters:
      id: fugiat
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: ''
        required: true
        example: suscipit
        type: string
        custom: []
      price:
        name: price
        description: ''
        required: true
        example: facere
        type: string
        custom: []
      amount:
        name: amount
        description: ''
        required: true
        example: autem
        type: string
        custom: []
    cleanBodyParameters:
      title: suscipit
      price: facere
      amount: autem
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/product/delete/{id}'
    metadata:
      groupName: 'Product Actions'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete product'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the delete.'
        required: true
        example: distinctio
        type: string
        custom: []
    cleanUrlParameters:
      id: distinctio
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
