openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/products:
    get:
      summary: 'Get all products with paginate'
      description: ''
      parameters:
        -
          in: query
          name: search
          description: ''
          example: ut
          required: false
          schema:
            type: string
            description: ''
            example: ut
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Product Actions'
  /api/product/create:
    post:
      summary: 'Create new product'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Product Actions'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: sunt
                price:
                  type: string
                  description: ''
                  example: veniam
                amount:
                  type: string
                  description: ''
                  example: adipisci
              required:
                - title
                - price
                - amount
  '/api/product/update/{id}':
    put:
      summary: 'Update product data'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Product Actions'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: suscipit
                price:
                  type: string
                  description: ''
                  example: facere
                amount:
                  type: string
                  description: ''
                  example: autem
              required:
                - title
                - price
                - amount
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the update.'
        example: fugiat
        required: true
        schema:
          type: string
  '/api/product/delete/{id}':
    put:
      summary: 'Delete product'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Product Actions'
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the delete.'
        example: distinctio
        required: true
        schema:
          type: string
tags:
  -
    name: 'Product Actions'
    description: ''
